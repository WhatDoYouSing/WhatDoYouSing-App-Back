###########
# BUILDER #
###########

FROM python:3.8.3-alpine as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# 필수 패키지 설치
RUN apk add --no-cache \
    python3-dev \
    mariadb-dev \
    build-base \
    libffi-dev \
    openssl-dev \
    jpeg-dev \
    zlib-dev \
    linux-headers \
    curl

# pip 최신화
RUN pip install --upgrade pip setuptools wheel

# cryptography는 Rust 없이 설치 가능한 wheel을 미리 설치
RUN pip install --only-binary cryptography cryptography==39.0.2

# requirements.txt에서 cryptography 제외 → 별도 설치 처리
COPY ./requirements.txt .
RUN grep -v "cryptography" requirements.txt > requirements_nocrypto.txt

# 휠 파일 생성 (cryptography 제외)
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements_nocrypto.txt


#########
# FINAL #
#########

FROM python:3.8.3-alpine

# 사용자 및 앱 디렉토리 설정
RUN addgroup -S app && adduser -S app -G app
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir -p $APP_HOME/static $APP_HOME/media
WORKDIR $APP_HOME

# 런타임 패키지 설치
RUN apk add --no-cache \
    libpq \
    libffi-dev \
    openssl-dev \
    jpeg-dev \
    zlib-dev

# 빌드 시 필요한 컴파일러 임시 설치 (backports.zoneinfo 등 대비)
RUN apk add --no-cache gcc musl-dev python3-dev

# 빌더 단계에서 휠 파일 및 requirements 복사
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements_nocrypto.txt .
COPY --from=builder /usr/src/app/requirements.txt .

# 휠 설치 → cryptography 설치 → pip 정리
RUN pip install --no-cache-dir /wheels/* && \
    pip install --only-binary cryptography cryptography==39.0.2 && \
    apk del gcc musl-dev python3-dev

# entrypoint 및 프로젝트 코드 복사
COPY ./config/docker/entrypoint.prod.sh $APP_HOME
COPY . $APP_HOME

# 권한 설정
RUN chown -R app:app $APP_HOME
USER app