#################
#   BUILDER     #
#################
FROM python:3.8.3-alpine AS builder

WORKDIR /usr/src/app
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1

# ─ 시스템 빌드 툴 + JDK (JPype1 컴파일) ─
RUN apk add --no-cache \
        build-base \
        openjdk17-jdk \
        python3-dev \
        jpeg-dev zlib-dev \
        libffi-dev openssl-dev \
        linux-headers \
        curl

# pip 최신화
RUN pip install --upgrade pip setuptools wheel

# requirements 복사 & wheel 빌드
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir /usr/src/app/wheels -r requirements.txt \
 && python -m spacy download en_core_web_sm


#################
#    FINAL      #
#################
FROM python:3.8.3-alpine

# 앱 사용자·폴더
RUN addgroup -S app && adduser -S app -G app
ENV HOME=/home/app \
    APP_HOME=/home/app/web \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    JAVA_HOME=/usr/lib/jvm/default-jvm

RUN mkdir -p $APP_HOME/static $APP_HOME/media
WORKDIR $APP_HOME

# 런타임 라이브러리 (JRE 포함)
RUN apk add --no-cache \
        openjdk17-jre-headless \
        libffi openssl \
        jpeg zlib \
        libgcc libstdc++

# wheel 설치
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-index --find-links=/wheels -r requirements.txt

# 프로젝트 복사
COPY ./config/docker/entrypoint.prod.sh $APP_HOME
COPY . $APP_HOME

# 권한 설정
RUN chown -R app:app $APP_HOME
USER app

ENTRYPOINT ["sh", "./entrypoint.prod.sh"]