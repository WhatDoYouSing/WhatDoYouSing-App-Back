# Generated by Django 4.2.17 on 2025-01-14 02:08

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일 주소')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='아이디')),
                ('notif_token', models.TextField(blank=True, null=True, verbose_name='FCM 토큰')),
                ('password_hash', models.CharField(max_length=128, verbose_name='암호화된 비밀번호')),
                ('nickname', models.CharField(max_length=50, verbose_name='닉네임')),
                ('profile', models.IntegerField(blank=True, null=True, verbose_name='프로필')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='칭호')),
                ('auth_provider', models.CharField(choices=[('apple', 'Apple'), ('kakao', 'Kakao'), ('google', 'Google')], max_length=50, verbose_name='소셜 로그인 제공자')),
                ('auth_provider_id', models.CharField(max_length=255, verbose_name='소셜 로그인 사용자 ID')),
                ('auth_provider_email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='소셜 로그인 이메일')),
                ('required_consent_date', models.DateTimeField(blank=True, null=True, verbose_name='필수 동의 날짜')),
                ('push_notification_consent', models.BooleanField(default=False, verbose_name='푸시알림 동의 여부')),
                ('marketing_consent', models.BooleanField(default=False, verbose_name='마케팅 정보 수신 동의 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='계정 생성 날짜')),
                ('last_use_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='마지막 접속 날짜')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserDeletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.IntegerField(choices=[(1, '다른 사용자들의 콘텐츠가 부족해서'), (2, '올리고 싶은 콘텐츠가 적어서'), (3, '기능 사용 방법이 편리하지 않아서'), (4, '원하는 기능이 없어서'), (5, '호기심에 설치한 앱이어서'), (6, '앱을 사용할 시간이 없어서'), (7, '기타')], verbose_name='탈퇴 사유')),
                ('custom_reason', models.TextField(blank=True, null=True, verbose_name='기타 사유')),
                ('deleted_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='탈퇴 날짜')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletions', to=settings.AUTH_USER_MODEL, verbose_name='탈퇴한 사용자')),
            ],
            options={
                'verbose_name': '사용자 탈퇴 기록',
                'verbose_name_plural': '사용자 탈퇴 기록',
                'db_table': 'user_deletions',
            },
        ),
    ]
